C51 COMPILER V9.59.0.0   TXMESAJV1                                                         04/03/2023 09:49:11 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE TXMESAJV1
OBJECT MODULE PLACED IN .\Objects\TxMesajV1.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE TxMesajV1.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\BIG8051\Include) DEB
                    -UG OBJECTEXTEND PRINT(.\Listings\TxMesajV1.lst) TABS(2) OBJECT(.\Objects\TxMesajV1.obj)

line level    source

   1          #include <c8051F040.h>  // declaratii SFR
   2          #include <uart1.h>
   3          #include <Protocol.h>
   4          #include <UserIO.h>
   5          
   6          extern unsigned char STARE_NOD;   // starea initiala a nodului curent
   7          extern unsigned char TIP_NOD;     // tip nod initial: Nu Master, Nu Jeton
   8          
   9          extern nod retea[];
  10          
  11          extern unsigned char timeout;   // variabila globala care indica expirare timp de asteptare eveniment
  12          //********************************************************************************************************
             -***
  13          void TxMesaj(unsigned char i);  // transmisie mesaj destinat nodului i
  14          void bin2ascii(unsigned char ch, unsigned char *ptr); // functie de conversie octet din binar in ASCII HEX
  15          
  16          //********************************************************************************************************
             -***
  17          void TxMesaj(unsigned char i){              // transmite mesajul din buffer-ul i
  18   1        unsigned char sc, *ptr, j;
  19   1      
  20   1        if(retea[i].bufbin.tipmes == POLL_MES){       // daca este un mesaj de interogare (POLL=0)
  21   2          sc = retea[i].bufbin.adresa_hw_dest;        // calculeaza direct sc
  22   2          sc += retea[i].bufbin.adresa_hw_src;
  23   2          retea[i].bufbin.sc = sc;              
  24   2        }
  25   1        else{                                         // altfel...
  26   2          sc = retea[i].bufbin.adresa_hw_dest;        // initializeaza SC cu adresa HW a nodului destinatie
  27   2          sc += retea[i].bufbin.adresa_hw_src;        // ia in calcul adresa_hw_src
  28   2          sc += retea[i].bufbin.tipmes;               // ia in calcul tipul mesajului
  29   2          sc += retea[i].bufbin.src;                  // ia in calcul adresa nodului sursa al mesajului
  30   2          sc += retea[i].bufbin.dest;                 // ia in calcul adresa nodului destinatie al mesajului
  31   2          sc += retea[i].bufbin.lng;                  // ia in calcul lungimea datelor
  32   2          for(j=0; j<retea[i].bufbin.lng; j++){
  33   3            sc += retea[i].bufbin.date[j];            // ia in calcul datele
  34   3          }
  35   2          retea[i].bufbin.sc = sc;                    // stocheaza suma de control
  36   2        } 
  37   1        ptr = retea[i].bufasc + 1;                    // initializare pointer pe bufferul ASCII
  38   1        bin2ascii(retea[i].bufbin.adresa_hw_dest, ptr);   // pune in bufasc adresa HW dest in ASCII HEX
  39   1        ptr += 2;
  40   1        bin2ascii(retea[i].bufbin.adresa_hw_src, ptr);    // pune in bufasc adresa HW src in ASCII HEX
  41   1        ptr += 2; 
  42   1        bin2ascii(retea[i].bufbin.tipmes, ptr);           // pune in bufasc tipul mesajului
  43   1        ptr += 2;
  44   1                                            
  45   1        if(retea[i].bufbin.tipmes == USER_MES) {          // daca este un mesaj de date (USER_MES)
  46   2          bin2ascii(retea[i].bufbin.src, ptr);            // pune in bufasc src
  47   2          ptr += 2;
  48   2          bin2ascii(retea[i].bufbin.dest, ptr);           // pune in bufasc dest
  49   2          ptr += 2;
  50   2          bin2ascii(retea[i].bufbin.lng, ptr);            // pune in bufasc lng date
  51   2          ptr += 2;
  52   2          for(j=0; j<retea[i].bufbin.lng; j++){
C51 COMPILER V9.59.0.0   TXMESAJV1                                                         04/03/2023 09:49:11 PAGE 2   

  53   3            bin2ascii(retea[i].bufbin.date[j], ptr);      // pune in bufasc datele
  54   3            ptr += 2;
  55   3          }
  56   2         }
  57   1          bin2ascii(retea[i].bufbin.sc, ptr);             // pune in bufasc SC
  58   1          ptr += 2;                   
  59   1          *ptr++ = 0x0d;                                  // pune in bufasc CR
  60   1          *ptr++ = 0x0a;                                  // pune in bufasc LF                    
  61   1          ptr = retea[i].bufasc;                          // reinitializare pointer                             
  62   1          do{ 
  63   2                          
  64   2            UART1_PutchPE(*ptr);                          // transmite primul caracter al mesajului (':')                     
  65   2            
  66   2          }
  67   1          while(*ptr++ != 0x0a);                            // transmite restul caracterelor din bufferul ASCII 
  68   1          
  69   1          if(TIP_NOD != MASTER){              
  70   2            retea[i].full=0;                              // slave-ul considera acum ca a transmis mesajul          
  71   2          }
  72   1          Delay(1);                                       // asteapta terminarea transmisiei                                                                        
  73   1          // return;
  74   1      }
  75          
  76          //********************************************************************************************************
             -***
  77          void bin2ascii(unsigned char ch, unsigned char *ptr){ // converteste octetul ch in doua caractere ASCII HE
             -X puse la adresa ptr
  78   1        unsigned char first, second;
  79   1        first = (ch & 0xF0)>>4;           // extrage din ch primul digit
  80   1        second = ch & 0x0F;               // extrage din ch al doilea digit
  81   1        if(first > 9) *ptr++ = first - 10 + 'A';  // converteste primul digit daca este litera
  82   1        else *ptr++ = first + '0';        // converteste primul digit daca este cifra
  83   1        if(second > 9) *ptr++ = second - 10 + 'A';  // converteste al doilea digit daca este litera
  84   1        else *ptr++ = second + '0';       // converteste al doilea digit daca este cifra
  85   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    924    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       9
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
