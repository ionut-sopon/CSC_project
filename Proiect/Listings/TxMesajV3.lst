C51 COMPILER V8.02   TXMESAJV3                                                             03/05/2023 12:06:57 PAGE 1   


C51 COMPILER V8.02, COMPILATION OF MODULE TXMESAJV3
OBJECT MODULE PLACED IN .\Objects\TxMesajV3.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE TxMesajV3.c LARGE BROWSE INCDIR(.\BIG8051\Include) DEBUG OBJECTEXTEND PRINT
                    -(.\Listings\TxMesajV3.lst) TABS(3) OBJECT(.\Objects\TxMesajV3.obj)

line level    source

   1          #include <c8051F040.h>  // declaratii SFR
   2          #include <uart1.h>
   3          #include <Protocol.h>
   4          #include <UserIO.h>
   5          
   6          extern unsigned char STARE_NOD;     // starea initiala a nodului curent
   7          extern unsigned char TIP_NOD;       // tip nod initial: Nu Master, Nu Jeton
   8          
   9          extern nod retea[];
  10          
  11          extern unsigned char timeout;    // variabila globala care indica expirare timp de asteptare eveniment
  12          //********************************************************************************************************
             -***
  13          void TxMesaj(unsigned char i);   // transmisie mesaj destinat nodului i
  14          void bin2ascii(unsigned char ch, unsigned char *ptr); // functie de conversie octet din binar in ASCII HEX
  15          
  16          //********************************************************************************************************
             -***
  17          void TxMesaj(unsigned char i){               // transmite mesajul din buffer-ul i
  18   1         unsigned char sc, *ptr, j;
  19   1      
  20   1                                                                  // daca este un mesaj de interogare (POLL=0)
  21   1                                                                     // calculeaza direct sc
  22   1                                                                  
  23   1                                                                                                                     // altfel...
  24   1                                                                     // initializeaza SC  cu adresa HW a nodului destinatie
  25   1                                                                     // ia in adresa_hw_src
  26   1                                                                     // ia in calcul tipul mesajului
  27   1                                                                     // ia in calcul adresa nodului sursa al mesajului
  28   1                                                                     // ia in calcul adresa nodului destinatie al mesajului
  29   1                                                                     // ia in calcul lungimea datelor
  30   1                                                                     
  31   1                                                                        // ia in calcul datele
  32   1                                                                     // stocheaza suma de control
  33   1                                                                  
  34   1                                                                  // initializare pointer pe bufferul ASCII
  35   1                                                                  // pune in bufasc adresa HW dest + '0'
  36   1                                                                  // pune in bufasc adresa HW src in ASCII HEX
  37   1                                                                  
  38   1                                                                  // pune in bufasc tipul mesajului
  39   1                                                                  
  40   1                                                                  // daca este un mesaj de date (USER_MES)
  41   1                                                                     // pune in bufasc src
  42   1                                                                     
  43   1                                                                     // pune in bufasc dest
  44   1                                                                     
  45   1                                                                     // pune in bufasc lng date
  46   1                                                                     
  47   1                                                                     
  48   1                                                                        // pune in bufasc datele
  49   1                                                                     
  50   1                                                                  
  51   1                                                               
  52   1                                                                  // pune in bufasc SC
C51 COMPILER V8.02   TXMESAJV3                                                             03/05/2023 12:06:57 PAGE 2   

  53   1                                                                  
  54   1                                                                  // pune in bufasc CR
  55   1                                                                  // pune in bufasc LF
  56   1         
  57   1                                                                  // urmeaza transmisia octetului de adresa
  58   1                                                                  // valideaza Tx si Rx UART1
  59   1                                                                  // validare Tx si Rx RS485
  60   1                                                                  
  61   1                                                                  // reinitializare pointer
  62   1                                                                  // transmite adresa HW dest
  63   1         
  64   1                                                                  // daca caracterul primit e diferit de cel transmis ...
  65   1                                                                        // dezactivare Tx si Rx UART1
  66   1                                                                        // dezactivare Tx si Rx RS485
  67   1                                                                        // afiseaza Eroare coliziune
  68   1                                                                        // asteapta 1 secunda
  69   1                                                                        // termina transmisia (revine)
  70   1                                                                  
  71   1      
  72   1                                                                     // dezactivare Rx UART1
  73   1                                                                     // dezactivare Rx RS485
  74   1                                                                     // urmeaza transmisia octetilor de date
  75   1                                                                     // dezactivare Rx UART1
  76   1                                                                     
  77   1                                                                     // transmite restul caracterelor din bufferul ASCII, mai putin ultimul
  78   1                                                                     
  79   1                                                                     // transmite si ultimul caracter
  80   1                                                                     // activare Rx UART1
  81   1         
  82   1                                                                     // slave-ul considera acum ca a transmis mesajul
  83   1                                                                     
  84   1                                                                     // asteapta terminarea transmisiei/receptiei ultimului caracter
  85   1                                                                     
  86   1                                                                     // dezactivare Tx si Rx UART1
  87   1                                                                     // dezactivare Tx si Rx RS485
  88   1      }
*** WARNING C280 IN LINE 17 OF TXMESAJV3.C: 'i': unreferenced local variable
*** WARNING C280 IN LINE 18 OF TXMESAJV3.C: 'sc': unreferenced local variable
*** WARNING C280 IN LINE 18 OF TXMESAJV3.C: 'ptr': unreferenced local variable
*** WARNING C280 IN LINE 18 OF TXMESAJV3.C: 'j': unreferenced local variable
  89          
  90          //********************************************************************************************************
             -***
  91          void bin2ascii(unsigned char ch, unsigned char *ptr){ // converteste octetul ch in doua caractere ASCII HE
             -X puse la adresa ptr
  92   1         unsigned char first, second;
  93   1         first = (ch & 0xF0)>>4;                // extrage din ch primul digit
  94   1         second = ch & 0x0F;                       // extrage din ch al doilea digit
  95   1         if(first > 9) *ptr++ = first - 10 + 'A';  // converteste primul digit daca este litera
  96   1         else *ptr++ = first + '0';          // converteste primul digit daca este cifra
  97   1         if(second > 9) *ptr++ = second - 10 + 'A';   // converteste al doilea digit daca este litera
  98   1         else *ptr++ = second + '0';            // converteste al doilea digit daca este cifra
  99   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     97    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       9
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
C51 COMPILER V8.02   TXMESAJV3                                                             03/05/2023 12:06:57 PAGE 3   

   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  4 WARNING(S),  0 ERROR(S)
